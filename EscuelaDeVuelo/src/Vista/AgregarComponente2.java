/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Administrar_Componente;
import Modelo.Componente;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.util.ArrayList;
import javax.print.DocFlavor;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author pcbla
 */
public class AgregarComponente2 extends javax.swing.JFrame {

    /**
     * Creates new form IngresarComponente
     */
    public AgregarComponente2() {
        initComponents();

        lblTrenAterrizaje.setText("Seleccione algun componente de la tabla Tren de Aterrizaje");
        lblTrenAterrizaje.setForeground(Color.red);
        lblEquipos.setText("Seleccione algun componente de la tabla Equipos");
        lblEquipos.setForeground(Color.red);
        lblCabina.setText("Seleccione algun componente de la tabla Cabina");
        lblCabina.setForeground(Color.red);
        lblMotor.setText("Seleccione algun componente de la tabla Motor");
        lblMotor.setForeground(Color.red);
        btnGuardar.setEnabled(false);
        cargarTablaCabina();
        cargarTablaEquipos();
        cargarTablaMotor();
        cargarTablaTrenAterrizaje();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tablaMotor = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        tablaEquipos = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        tablaTrenAterrizaje = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        tablaCabina = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblTrenAterrizaje = new javax.swing.JLabel();
        lblEquipos = new javax.swing.JLabel();
        lblMotor = new javax.swing.JLabel();
        lblCabina = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnAgregarCabina = new javax.swing.JButton();
        btnAgregarMotor = new javax.swing.JButton();
        btnAgregarEquipos = new javax.swing.JButton();
        btnAgregarTren = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1792, 674));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Agregar componentes");

        jLabel2.setText("Tren de Aterrizaje");

        jLabel3.setText("Motor");

        tablaMotor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaMotor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMotorMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tablaMotor);

        tablaEquipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaEquipos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEquiposMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(tablaEquipos);

        tablaTrenAterrizaje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaTrenAterrizaje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTrenAterrizajeMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(tablaTrenAterrizaje);

        tablaCabina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaCabina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCabinaMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(tablaCabina);

        jLabel4.setText("Equipos");

        jLabel5.setText("Cabina");

        jLabel6.setText("Componentes seleccionados");

        lblTrenAterrizaje.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTrenAterrizaje.setText("jLabel7");

        lblEquipos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEquipos.setText("jLabel8");

        lblMotor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMotor.setText("jLabel9");

        lblCabina.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCabina.setText("jLabel10");

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/guardar.png"))); // NOI18N
        btnGuardar.setBorder(null);
        btnGuardar.setBorderPainted(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnAgregarCabina.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        btnAgregarCabina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/agregar.png"))); // NOI18N
        btnAgregarCabina.setBorder(null);
        btnAgregarCabina.setBorderPainted(false);
        btnAgregarCabina.setContentAreaFilled(false);
        btnAgregarCabina.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarCabina.setEnabled(false);
        btnAgregarCabina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCabinaActionPerformed(evt);
            }
        });

        btnAgregarMotor.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        btnAgregarMotor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/agregar.png"))); // NOI18N
        btnAgregarMotor.setBorder(null);
        btnAgregarMotor.setBorderPainted(false);
        btnAgregarMotor.setContentAreaFilled(false);
        btnAgregarMotor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarMotor.setEnabled(false);
        btnAgregarMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMotorActionPerformed(evt);
            }
        });

        btnAgregarEquipos.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        btnAgregarEquipos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/agregar.png"))); // NOI18N
        btnAgregarEquipos.setBorder(null);
        btnAgregarEquipos.setBorderPainted(false);
        btnAgregarEquipos.setContentAreaFilled(false);
        btnAgregarEquipos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarEquipos.setEnabled(false);
        btnAgregarEquipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEquiposActionPerformed(evt);
            }
        });

        btnAgregarTren.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        btnAgregarTren.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/agregar.png"))); // NOI18N
        btnAgregarTren.setBorder(null);
        btnAgregarTren.setBorderPainted(false);
        btnAgregarTren.setContentAreaFilled(false);
        btnAgregarTren.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarTren.setEnabled(false);
        btnAgregarTren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarTrenActionPerformed(evt);
            }
        });

        btnMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/regresar.png"))); // NOI18N
        btnMenu.setBorder(null);
        btnMenu.setBorderPainted(false);
        btnMenu.setContentAreaFilled(false);
        btnMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(57, 57, 57)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblTrenAterrizaje)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnAgregarTren))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblEquipos)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnAgregarEquipos))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblMotor)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 203, Short.MAX_VALUE)
                                                .addComponent(btnAgregarMotor))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(lblCabina)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnAgregarCabina))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(96, 96, 96)
                                                .addComponent(jLabel6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(137, 137, 137)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btnMenu)
                                                    .addComponent(btnGuardar))))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(13, 13, 13))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(285, 285, 285)
                                .addComponent(jLabel2)
                                .addGap(534, 534, 534)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(319, 319, 319)
                                .addComponent(jLabel3)
                                .addGap(438, 438, 438)
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(435, 435, 435)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(999, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregarTren)
                            .addComponent(lblTrenAterrizaje))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEquipos)
                            .addComponent(btnAgregarEquipos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMotor)
                            .addComponent(btnAgregarMotor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCabina)
                            .addComponent(btnAgregarCabina))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addGap(33, 33, 33)
                        .addComponent(btnMenu)))
                .addContainerGap(68, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(129, 129, 129)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(326, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
String matriculaNave2 = "";
    boolean flagDisp2 = true;
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:

        int idTrenAterrizaje = Integer.parseInt(tablaTrenAterrizaje.getValueAt(tablaTrenAterrizaje.getSelectedRow(), 0).toString());
        int idEquipos = Integer.parseInt(tablaEquipos.getValueAt(tablaEquipos.getSelectedRow(), 0).toString());
        int idMotor = Integer.parseInt(tablaMotor.getValueAt(tablaMotor.getSelectedRow(), 0).toString());
        int idCabina = Integer.parseInt(tablaCabina.getValueAt(tablaCabina.getSelectedRow(), 0).toString());

        Administrar_Componente ac = new Administrar_Componente();
        ac.asociarAeronave(idCabina, matriculaNave2);
        ac.asociarAeronave(idEquipos, matriculaNave2);
        ac.asociarAeronave(idMotor, matriculaNave2);
        ac.asociarAeronave(idTrenAterrizaje, matriculaNave2);

        JOptionPane.showMessageDialog(null, "Los componentes han sido agregados exitosamente a la aeronave");

        MenuPrincipalOperador menu = new MenuPrincipalOperador();
        menu.setLocationRelativeTo(null);
        menu.setVisible(true);
        this.dispose();


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tablaTrenAterrizajeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTrenAterrizajeMouseClicked
        // TODO add your handling code here:
        if (tablaTrenAterrizaje.getSelectedRow() >= 0) {
            lblTrenAterrizaje.setText("Componente Tren de Aterrizaje seleccionado");
            lblTrenAterrizaje.setForeground(Color.GREEN);
        }
        if (lblTrenAterrizaje.getForeground().equals(Color.GREEN) && lblEquipos.getForeground().equals(Color.GREEN) && lblCabina.getForeground().equals(Color.GREEN) && lblMotor.getForeground().equals(Color.GREEN)) {
            btnGuardar.setEnabled(true);
        }

    }//GEN-LAST:event_tablaTrenAterrizajeMouseClicked

    private void tablaEquiposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEquiposMouseClicked
        // TODO add your handling code here:}
        if (tablaEquipos.getSelectedRow() >= 0) {
            lblEquipos.setText("Componente Equipos seleccionado");
            lblEquipos.setForeground(Color.GREEN);
        }
        if (lblTrenAterrizaje.getForeground().equals(Color.GREEN) && lblEquipos.getForeground().equals(Color.GREEN) && lblCabina.getForeground().equals(Color.GREEN) && lblMotor.getForeground().equals(Color.GREEN)) {
            btnGuardar.setEnabled(true);
        }
    }//GEN-LAST:event_tablaEquiposMouseClicked

    private void tablaMotorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMotorMouseClicked
        // TODO add your handling code here:

        if (tablaMotor.getSelectedRow() >= 0) {
            lblMotor.setText("Componente Motor seleccionado");
            lblMotor.setForeground(Color.GREEN);
        }
        if (lblTrenAterrizaje.getForeground().equals(Color.GREEN) && lblEquipos.getForeground().equals(Color.GREEN) && lblCabina.getForeground().equals(Color.GREEN) && lblMotor.getForeground().equals(Color.GREEN)) {
            btnGuardar.setEnabled(true);
        }

    }//GEN-LAST:event_tablaMotorMouseClicked

    private void tablaCabinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCabinaMouseClicked
        // TODO add your handling code here:
        if (tablaCabina.getSelectedRow() >= 0) {
            lblCabina.setText("Componente Controles y Frenos seleccionado");
            lblCabina.setForeground(Color.GREEN);
        }
        if (lblTrenAterrizaje.getForeground().equals(Color.GREEN) && lblEquipos.getForeground().equals(Color.GREEN) && lblCabina.getForeground().equals(Color.GREEN) && lblMotor.getForeground().equals(Color.GREEN)) {
            btnGuardar.setEnabled(true);
        }

    }//GEN-LAST:event_tablaCabinaMouseClicked

    private void btnAgregarCabinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCabinaActionPerformed
        IngresarComponente ingresarCompte = new IngresarComponente();
        //ingresarCompte.retorno = true;
        ingresarCompte.setLocationRelativeTo(null);
        ingresarCompte.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarCabinaActionPerformed

    private void btnAgregarMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMotorActionPerformed
        IngresarComponente ingresarCompte = new IngresarComponente();
        //ingresarCompte.retorno = true;
        ingresarCompte.setLocationRelativeTo(null);
        ingresarCompte.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAgregarMotorActionPerformed

    private void btnAgregarEquiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEquiposActionPerformed
        IngresarComponente ingresarCompte = new IngresarComponente();
        //ingresarCompte.retorno = true;
        ingresarCompte.setLocationRelativeTo(null);
        ingresarCompte.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarEquiposActionPerformed

    private void btnAgregarTrenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarTrenActionPerformed
        IngresarComponente ingresarCompte = new IngresarComponente();
        //ingresarCompte.retorno = true;
        ingresarCompte.setLocationRelativeTo(null);
        ingresarCompte.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarTrenActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        MenuPrincipalOperador menu = new MenuPrincipalOperador();
        menu.setLocationRelativeTo(null);
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarComponente2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarComponente2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarComponente2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarComponente2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarComponente2().setVisible(true);
            }
        });
    }

    private void cargarTablaTrenAterrizaje() {
        //Definición de nombres y tamaño de las columnas al iniciar la ventana.
        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tablaTrenAterrizaje.setModel(modelo);
        tablaTrenAterrizaje.getTableHeader().setReorderingAllowed(false);
        //.:Nombres de columnas:.
        modelo.addColumn("ID");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("FABRICANTE");
        modelo.addColumn("HORAS DE VUELO");
        modelo.addColumn("DIAS DE VUELO");
        //.:Tamaño de columnas:.
        tablaTrenAterrizaje.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = tablaTrenAterrizaje.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(140);
        columnModel.getColumn(2).setPreferredWidth(125);
        columnModel.getColumn(3).setPreferredWidth(120);
        columnModel.getColumn(4).setPreferredWidth(100);
        Administrar_Componente ac = new Administrar_Componente();
        ArrayList<Componente> listaTren = ac.listarFiltro(5);
        Object[] fila = new Object[8];
        int num = listaTren.size();
        if (listaTren.isEmpty()) {
            flagDisp2 = false;
            btnAgregarTren.setEnabled(true);
            lblTrenAterrizaje.setText("No existen componentes tipo tren de aterrizaje disponibles");
        } else {
            for (int i = 0; i < num; i++) {
                fila[0] = listaTren.get(i).getId();
                fila[1] = listaTren.get(i).getDescripcion();
                fila[2] = listaTren.get(i).getFabricante();
                fila[3] = listaTren.get(i).getHoras_vuelo();
                fila[4] = listaTren.get(i).getDias_vuelo();
                modelo.addRow(fila);
            }
            tablaTrenAterrizaje.updateUI();
        }

    }

    private void cargarTablaMotor() {
        //Definición de nombres y tamaño de las columnas al iniciar la ventana.
        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tablaMotor.setModel(modelo);
        tablaMotor.getTableHeader().setReorderingAllowed(false);
        //.:Nombres de columnas:.
        modelo.addColumn("ID");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("FABRICANTE");
        modelo.addColumn("HORAS DE VUELO");
        modelo.addColumn("DIAS DE VUELO");
        //.:Tamaño de columnas:.
        tablaMotor.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = tablaMotor.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(140);
        columnModel.getColumn(2).setPreferredWidth(125);
        columnModel.getColumn(3).setPreferredWidth(120);
        columnModel.getColumn(4).setPreferredWidth(100);
        Administrar_Componente ac = new Administrar_Componente();
        ArrayList<Componente> listaMotor = ac.listarFiltro(7);
        Object[] fila = new Object[8];
        int num = listaMotor.size();
        if (listaMotor.isEmpty()) {
            flagDisp2 = false;
            btnAgregarMotor.setEnabled(true);
            lblMotor.setText("No existen componentes tipo motor disponibles");
        } else {
            for (int i = 0; i < num; i++) {
                fila[0] = listaMotor.get(i).getId();
                fila[1] = listaMotor.get(i).getDescripcion();
                fila[2] = listaMotor.get(i).getFabricante();
                fila[3] = listaMotor.get(i).getHoras_vuelo();
                fila[4] = listaMotor.get(i).getDias_vuelo();
                modelo.addRow(fila);
            }
            tablaMotor.updateUI();
        }

    }

    private void cargarTablaEquipos() {
        //Definición de nombres y tamaño de las columnas al iniciar la ventana.
        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tablaEquipos.setModel(modelo);
        tablaEquipos.getTableHeader().setReorderingAllowed(false);
        //.:Nombres de columnas:.
        modelo.addColumn("ID");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("FABRICANTE");
        modelo.addColumn("HORAS DE VUELO");
        modelo.addColumn("DIAS DE VUELO");
        //.:Tamaño de columnas:.
        tablaEquipos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = tablaEquipos.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(140);
        columnModel.getColumn(2).setPreferredWidth(125);
        columnModel.getColumn(3).setPreferredWidth(120);
        columnModel.getColumn(4).setPreferredWidth(100);
        Administrar_Componente ac = new Administrar_Componente();
        ArrayList<Componente> listaEquipos = ac.listarFiltro(6);
        Object[] fila = new Object[8];
        int num = listaEquipos.size();
        if (listaEquipos.isEmpty()) {
            flagDisp2 = false;
            btnAgregarEquipos.setEnabled(true);
            lblEquipos.setText("No existen componentes tipo equipos disponibles");
        } else {
            for (int i = 0; i < num; i++) {
                fila[0] = listaEquipos.get(i).getId();
                fila[1] = listaEquipos.get(i).getDescripcion();
                fila[2] = listaEquipos.get(i).getFabricante();
                fila[3] = listaEquipos.get(i).getHoras_vuelo();
                fila[4] = listaEquipos.get(i).getDias_vuelo();
                modelo.addRow(fila);
            }
            tablaEquipos.updateUI();
        }

    }

    private void cargarTablaCabina() {
        //Definición de nombres y tamaño de las columnas al iniciar la ventana.
        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tablaCabina.setModel(modelo);
        tablaCabina.getTableHeader().setReorderingAllowed(false);
        //.:Nombres de columnas:.
        modelo.addColumn("ID");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("FABRICANTE");
        modelo.addColumn("HORAS DE VUELO");
        modelo.addColumn("DIAS DE VUELO");
        //.:Tamaño de columnas:.
        tablaCabina.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = tablaCabina.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(140);
        columnModel.getColumn(2).setPreferredWidth(125);
        columnModel.getColumn(3).setPreferredWidth(120);
        columnModel.getColumn(4).setPreferredWidth(100);
        Administrar_Componente ac = new Administrar_Componente();
        ArrayList<Componente> listaCabina = ac.listarFiltro(8);
        Object[] fila = new Object[8];
        int num = listaCabina.size();
        if (listaCabina.isEmpty()) {
            flagDisp2 = false;
            btnAgregarCabina.setEnabled(true);
            lblCabina.setText("No existen componentes tipo cabina disponibles");
        } else {
            for (int i = 0; i < num; i++) {
                fila[0] = listaCabina.get(i).getId();
                fila[1] = listaCabina.get(i).getDescripcion();
                fila[2] = listaCabina.get(i).getFabricante();
                fila[3] = listaCabina.get(i).getHoras_vuelo();
                fila[4] = listaCabina.get(i).getDias_vuelo();
                modelo.addRow(fila);
            }
            tablaCabina.updateUI();
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCabina;
    private javax.swing.JButton btnAgregarEquipos;
    private javax.swing.JButton btnAgregarMotor;
    private javax.swing.JButton btnAgregarTren;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnMenu;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblCabina;
    private javax.swing.JLabel lblEquipos;
    private javax.swing.JLabel lblMotor;
    private javax.swing.JLabel lblTrenAterrizaje;
    private javax.swing.JTable tablaCabina;
    private javax.swing.JTable tablaEquipos;
    private javax.swing.JTable tablaMotor;
    private javax.swing.JTable tablaTrenAterrizaje;
    // End of variables declaration//GEN-END:variables
}
