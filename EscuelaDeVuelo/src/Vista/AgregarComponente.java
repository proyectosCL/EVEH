/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Administrar_Componente;
import Modelo.Componente;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.util.ArrayList;
import javax.print.DocFlavor;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import jdk.nashorn.internal.ir.BreakNode;

/**
 *
 * @author pcbla
 */
public class AgregarComponente extends javax.swing.JFrame {

    /**
     * Creates new form IngresarComponente
     */
    public AgregarComponente() {
        initComponents();
        lblFuselaje.setText("Seleccione algun componente de la tabla Fuselaje");
        lblFuselaje.setForeground(Color.red);
        lblAlas.setText("Seleccione algun componente de la tabla Alas");
        lblAlas.setForeground(Color.red);
        lblControlesYFrenos.setText("Seleccione algun componente de la tabla Controles y Frenos");
        lblControlesYFrenos.setForeground(Color.red);
        lblEmpenaje.setText("Seleccione algun componente de la tabla Empenaje");
        lblEmpenaje.setForeground(Color.red);
        btnAvanzar.setEnabled(false);
        cargarTablaFuselaje();
//        if (flagDisp == false) {
//            MenuPrincipalOperador menu = new MenuPrincipalOperador();
//            menu.setLocationRelativeTo(null);
//            menu.setVisible(true);
//            this.dispose();
//        } else {
        cargarTablaAlas();
//            if (flagDisp == false) {
//                MenuPrincipalOperador menu = new MenuPrincipalOperador();
//                menu.setLocationRelativeTo(null);
//                menu.setVisible(true);
//                this.dispose();
//            } else {
        cargarTablaEmpenaje();
//                if (flagDisp == false) {
//                    MenuPrincipalOperador menu = new MenuPrincipalOperador();
//                    menu.setLocationRelativeTo(null);
//                    menu.setVisible(true);
//                    this.dispose();
//                } else {
        cargarTablaControlesFrenos();
//                    if (flagDisp == false) {
//                        MenuPrincipalOperador menu = new MenuPrincipalOperador();
//                        menu.setLocationRelativeTo(null);
//                        menu.setVisible(true);
//                        this.dispose();
//                    } else {

//                    }
//                }
//            }
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tablaAlas = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        tablaEmpenaje = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        tablaFuselaje = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        tablaControlesFrenos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblFuselaje = new javax.swing.JLabel();
        lblAlas = new javax.swing.JLabel();
        lblEmpenaje = new javax.swing.JLabel();
        lblControlesYFrenos = new javax.swing.JLabel();
        btnAvanzar = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        btnAgregarEmpenaje = new javax.swing.JButton();
        btnAgregarFuselaje = new javax.swing.JButton();
        btnAgregarControlesFrenos = new javax.swing.JButton();
        btnAgregarAlas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1792, 674));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Agregar componentes a aeronave");

        jLabel2.setText("Fuselaje");

        jLabel3.setText("Alas");

        tablaAlas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaAlas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlasMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tablaAlas);

        tablaEmpenaje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaEmpenaje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEmpenajeMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(tablaEmpenaje);

        tablaFuselaje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaFuselaje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaFuselajeMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(tablaFuselaje);

        tablaControlesFrenos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaControlesFrenos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaControlesFrenosMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(tablaControlesFrenos);

        jLabel4.setText("Empenaje");

        jLabel5.setText("Controles y Frenos Aerodinamicos");

        jLabel6.setText("Componentes seleccionados");

        lblFuselaje.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblFuselaje.setText("jLabel7");

        lblAlas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAlas.setText("jLabel8");

        lblEmpenaje.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEmpenaje.setText("jLabel9");

        lblControlesYFrenos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblControlesYFrenos.setText("jLabel10");

        btnAvanzar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/avanzar.png"))); // NOI18N
        btnAvanzar.setBorder(null);
        btnAvanzar.setBorderPainted(false);
        btnAvanzar.setContentAreaFilled(false);
        btnAvanzar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAvanzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvanzarActionPerformed(evt);
            }
        });

        btnMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/regresar.png"))); // NOI18N
        btnMenu.setBorder(null);
        btnMenu.setBorderPainted(false);
        btnMenu.setContentAreaFilled(false);
        btnMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnAgregarEmpenaje.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        btnAgregarEmpenaje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/agregar.png"))); // NOI18N
        btnAgregarEmpenaje.setBorder(null);
        btnAgregarEmpenaje.setBorderPainted(false);
        btnAgregarEmpenaje.setContentAreaFilled(false);
        btnAgregarEmpenaje.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarEmpenaje.setEnabled(false);
        btnAgregarEmpenaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEmpenajeActionPerformed(evt);
            }
        });

        btnAgregarFuselaje.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        btnAgregarFuselaje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/agregar.png"))); // NOI18N
        btnAgregarFuselaje.setBorder(null);
        btnAgregarFuselaje.setBorderPainted(false);
        btnAgregarFuselaje.setContentAreaFilled(false);
        btnAgregarFuselaje.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarFuselaje.setEnabled(false);
        btnAgregarFuselaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarFuselajeActionPerformed(evt);
            }
        });

        btnAgregarControlesFrenos.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        btnAgregarControlesFrenos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/agregar.png"))); // NOI18N
        btnAgregarControlesFrenos.setBorder(null);
        btnAgregarControlesFrenos.setBorderPainted(false);
        btnAgregarControlesFrenos.setContentAreaFilled(false);
        btnAgregarControlesFrenos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarControlesFrenos.setEnabled(false);
        btnAgregarControlesFrenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarControlesFrenosActionPerformed(evt);
            }
        });

        btnAgregarAlas.setFont(new java.awt.Font("Trebuchet MS", 1, 11)); // NOI18N
        btnAgregarAlas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botones/agregar.png"))); // NOI18N
        btnAgregarAlas.setBorder(null);
        btnAgregarAlas.setBorderPainted(false);
        btnAgregarAlas.setContentAreaFilled(false);
        btnAgregarAlas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarAlas.setEnabled(false);
        btnAgregarAlas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarAlasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAvanzar)
                            .addComponent(btnMenu))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEmpenaje)
                                    .addComponent(lblAlas)
                                    .addComponent(lblControlesYFrenos)
                                    .addComponent(lblFuselaje))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAgregarEmpenaje, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnAgregarAlas, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnAgregarControlesFrenos, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(22, 22, 22))))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(jLabel2)
                        .addGap(534, 534, 534)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(319, 319, 319)
                        .addComponent(jLabel3)
                        .addGap(438, 438, 438)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(429, 429, 429)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(1006, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(1455, Short.MAX_VALUE)
                    .addComponent(btnAgregarFuselaje)
                    .addGap(20, 20, 20)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAvanzar)
                                .addGap(34, 34, 34)
                                .addComponent(btnMenu))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(38, 38, 38)
                        .addComponent(lblFuselaje)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregarEmpenaje)
                            .addComponent(lblAlas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmpenaje)
                            .addComponent(btnAgregarAlas))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregarControlesFrenos)
                            .addComponent(lblControlesYFrenos))))
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(129, 129, 129)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(320, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(175, 175, 175)
                    .addComponent(btnAgregarFuselaje)
                    .addContainerGap(460, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String matriculaNave = "";
    boolean flagDisp = true;
    private void btnAvanzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvanzarActionPerformed
        // TODO add your handling code here:

        int idFuselaje = Integer.parseInt(tablaFuselaje.getValueAt(tablaFuselaje.getSelectedRow(), 0).toString());
        int idEmpenaje = Integer.parseInt(tablaEmpenaje.getValueAt(tablaEmpenaje.getSelectedRow(), 0).toString());
        int idAlas = Integer.parseInt(tablaAlas.getValueAt(tablaAlas.getSelectedRow(), 0).toString());
        int idControlesFrenos = Integer.parseInt(tablaControlesFrenos.getValueAt(tablaControlesFrenos.getSelectedRow(), 0).toString());

        Administrar_Componente ac = new Administrar_Componente();
        ac.asociarAeronave(idFuselaje, matriculaNave);
        ac.asociarAeronave(idEmpenaje, matriculaNave);
        ac.asociarAeronave(idAlas, matriculaNave);
        ac.asociarAeronave(idControlesFrenos, matriculaNave);

        AgregarComponente2 ventanaComponente2 = new AgregarComponente2();
        ventanaComponente2.matriculaNave2 = matriculaNave;
        ventanaComponente2.setVisible(true);
        this.dispose();


    }//GEN-LAST:event_btnAvanzarActionPerformed

    private void tablaFuselajeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaFuselajeMouseClicked
        // TODO add your handling code here:
        if (tablaFuselaje.getSelectedRow() >= 0) {
            lblFuselaje.setText("Componente Fuselaje seleccionado");
            lblFuselaje.setForeground(Color.GREEN);
        }
        if (lblFuselaje.getForeground().equals(Color.GREEN) && lblAlas.getForeground().equals(Color.GREEN) && lblControlesYFrenos.getForeground().equals(Color.GREEN) && lblEmpenaje.getForeground().equals(Color.GREEN)) {
            btnAvanzar.setEnabled(true);
        }


    }//GEN-LAST:event_tablaFuselajeMouseClicked

    private void tablaEmpenajeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEmpenajeMouseClicked
        // TODO add your handling code here:}
        if (tablaEmpenaje.getSelectedRow() >= 0) {
            lblEmpenaje.setText("Componente Empenaje seleccionado");
            lblEmpenaje.setForeground(Color.GREEN);
        }
        if (lblFuselaje.getForeground().equals(Color.GREEN) && lblAlas.getForeground().equals(Color.GREEN) && lblControlesYFrenos.getForeground().equals(Color.GREEN) && lblEmpenaje.getForeground().equals(Color.GREEN)) {
            btnAvanzar.setEnabled(true);
        }
    }//GEN-LAST:event_tablaEmpenajeMouseClicked

    private void tablaAlasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlasMouseClicked
        // TODO add your handling code here:

        if (tablaAlas.getSelectedRow() >= 0) {
            lblAlas.setText("Componente Alas seleccionado");
            lblAlas.setForeground(Color.GREEN);
        }
        if (lblFuselaje.getForeground().equals(Color.GREEN) && lblAlas.getForeground().equals(Color.GREEN) && lblControlesYFrenos.getForeground().equals(Color.GREEN) && lblEmpenaje.getForeground().equals(Color.GREEN)) {
            btnAvanzar.setEnabled(true);
        }

    }//GEN-LAST:event_tablaAlasMouseClicked

    private void tablaControlesFrenosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaControlesFrenosMouseClicked
        // TODO add your handling code here:
        if (tablaControlesFrenos.getSelectedRow() >= 0) {
            lblControlesYFrenos.setText("Componente Controles y Frenos seleccionado");
            lblControlesYFrenos.setForeground(Color.GREEN);
        }
        if (lblFuselaje.getForeground().equals(Color.GREEN) && lblAlas.getForeground().equals(Color.GREEN) && lblControlesYFrenos.getForeground().equals(Color.GREEN) && lblEmpenaje.getForeground().equals(Color.GREEN)) {
            btnAvanzar.setEnabled(true);
        }

    }//GEN-LAST:event_tablaControlesFrenosMouseClicked

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        MenuPrincipalOperador menu = new MenuPrincipalOperador();
        menu.setLocationRelativeTo(null);
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnAgregarEmpenajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEmpenajeActionPerformed
        IngresarComponente ingresarCompte = new IngresarComponente();
        //ingresarCompte.retorno = true;
        ingresarCompte.setLocationRelativeTo(null);
        ingresarCompte.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAgregarEmpenajeActionPerformed

    private void btnAgregarFuselajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarFuselajeActionPerformed
        IngresarComponente ingresarCompte = new IngresarComponente();
        //ingresarCompte.retorno = true;
        ingresarCompte.setLocationRelativeTo(null);
        ingresarCompte.setVisible(true);
        this.dispose();        // TODO add your handling code here:

    }//GEN-LAST:event_btnAgregarFuselajeActionPerformed

    private void btnAgregarControlesFrenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarControlesFrenosActionPerformed
        IngresarComponente ingresarCompte = new IngresarComponente();
        //ingresarCompte.retorno = true;
        ingresarCompte.setLocationRelativeTo(null);
        ingresarCompte.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarControlesFrenosActionPerformed

    private void btnAgregarAlasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarAlasActionPerformed
        IngresarComponente ingresarCompte = new IngresarComponente();
        //ingresarCompte.retorno = true;
        ingresarCompte.setLocationRelativeTo(null);
        ingresarCompte.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarAlasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarComponente().setVisible(true);
            }
        });
    }

    private void cargarTablaFuselaje() {
        //Definición de nombres y tamaño de las columnas al iniciar la ventana.
        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tablaFuselaje.setModel(modelo);
        tablaFuselaje.getTableHeader().setReorderingAllowed(false);
        //.:Nombres de columnas:.
        modelo.addColumn("ID");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("FABRICANTE");
        modelo.addColumn("HORAS DE VUELO");
        modelo.addColumn("DIAS DE VUELO");
        //.:Tamaño de columnas:.
        tablaFuselaje.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = tablaFuselaje.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(140);
        columnModel.getColumn(2).setPreferredWidth(125);
        columnModel.getColumn(3).setPreferredWidth(120);
        columnModel.getColumn(4).setPreferredWidth(100);
        Administrar_Componente ac = new Administrar_Componente();
        ArrayList<Componente> listaFuselaje = ac.listarFiltro(1);
        Object[] fila = new Object[8];
        int num = listaFuselaje.size();
        if (listaFuselaje.isEmpty()) {
            //JOptionPane.showMessageDialog(null, "No hay disponibilidad de componentes del tipo Fuselaje");
            flagDisp = false;
            btnAgregarFuselaje.setEnabled(true);
            lblFuselaje.setText("No existen componentes tipo fuselaje disponibles");

        } else {
            for (int i = 0; i < num; i++) {
                fila[0] = listaFuselaje.get(i).getId();
                fila[1] = listaFuselaje.get(i).getDescripcion();
                fila[2] = listaFuselaje.get(i).getFabricante();
                fila[3] = listaFuselaje.get(i).getHoras_vuelo();
                fila[4] = listaFuselaje.get(i).getDias_vuelo();
                modelo.addRow(fila);
            }
            tablaFuselaje.updateUI();
        }

    }

    private void cargarTablaAlas() {
        //Definición de nombres y tamaño de las columnas al iniciar la ventana.
        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tablaAlas.setModel(modelo);
        tablaAlas.getTableHeader().setReorderingAllowed(false);
        //.:Nombres de columnas:.
        modelo.addColumn("ID");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("FABRICANTE");
        modelo.addColumn("HORAS DE VUELO");
        modelo.addColumn("DIAS DE VUELO");
        //.:Tamaño de columnas:.
        tablaAlas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = tablaAlas.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(140);
        columnModel.getColumn(2).setPreferredWidth(125);
        columnModel.getColumn(3).setPreferredWidth(120);
        columnModel.getColumn(4).setPreferredWidth(100);
        Administrar_Componente ac = new Administrar_Componente();
        ArrayList<Componente> listaAlas = ac.listarFiltro(2);
        int num = listaAlas.size();
        if (listaAlas.isEmpty()) {
            //JOptionPane.showMessageDialog(null, "No hay disponibilidad de componentes del tipo Alas");
            flagDisp = false;
            btnAgregarAlas.setEnabled(true);
            lblAlas.setText("No existen componentes tipo alas disponibles ");
        } else {
            Object[] fila = new Object[8];

            for (int i = 0; i < num; i++) {
                fila[0] = listaAlas.get(i).getId();
                fila[1] = listaAlas.get(i).getDescripcion();
                fila[2] = listaAlas.get(i).getFabricante();
                fila[3] = listaAlas.get(i).getHoras_vuelo();
                fila[4] = listaAlas.get(i).getDias_vuelo();
                modelo.addRow(fila);
            }
            tablaAlas.updateUI();
        }

    }

    private void cargarTablaEmpenaje() {
        //Definición de nombres y tamaño de las columnas al iniciar la ventana.
        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tablaEmpenaje.setModel(modelo);
        tablaEmpenaje.getTableHeader().setReorderingAllowed(false);
        //.:Nombres de columnas:.
        modelo.addColumn("ID");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("FABRICANTE");
        modelo.addColumn("HORAS DE VUELO");
        modelo.addColumn("DIAS DE VUELO");
        //.:Tamaño de columnas:.
        tablaEmpenaje.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = tablaEmpenaje.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(140);
        columnModel.getColumn(2).setPreferredWidth(125);
        columnModel.getColumn(3).setPreferredWidth(120);
        columnModel.getColumn(4).setPreferredWidth(100);
        Administrar_Componente ac = new Administrar_Componente();
        ArrayList<Componente> listaEmpenaje = ac.listarFiltro(3);
        Object[] fila = new Object[8];

        int num = listaEmpenaje.size();
        if (listaEmpenaje.isEmpty()) {
            //JOptionPane.showMessageDialog(null, "No hay disponibilidad de componentes del tipo Empenaje");
            flagDisp = false;
            btnAgregarEmpenaje.setEnabled(true);
            lblEmpenaje.setText("No existen componentes tipo empenaje disponibles ");
        } else {
            for (int i = 0; i < num; i++) {
                fila[0] = listaEmpenaje.get(i).getId();
                fila[1] = listaEmpenaje.get(i).getDescripcion();
                fila[2] = listaEmpenaje.get(i).getFabricante();
                fila[3] = listaEmpenaje.get(i).getHoras_vuelo();
                fila[4] = listaEmpenaje.get(i).getDias_vuelo();
                modelo.addRow(fila);
            }
            tablaEmpenaje.updateUI();
        }

    }

    private void cargarTablaControlesFrenos() {
        //Definición de nombres y tamaño de las columnas al iniciar la ventana.
        DefaultTableModel modelo = new DefaultTableModel() {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tablaControlesFrenos.setModel(modelo);
        tablaControlesFrenos.getTableHeader().setReorderingAllowed(false);
        //.:Nombres de columnas:.
        modelo.addColumn("ID");
        modelo.addColumn("DESCRIPCION");
        modelo.addColumn("FABRICANTE");
        modelo.addColumn("HORAS DE VUELO");
        modelo.addColumn("DIAS DE VUELO");
        //.:Tamaño de columnas:.
        tablaControlesFrenos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = tablaControlesFrenos.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(1).setPreferredWidth(140);
        columnModel.getColumn(2).setPreferredWidth(125);
        columnModel.getColumn(3).setPreferredWidth(120);
        columnModel.getColumn(4).setPreferredWidth(100);
        Administrar_Componente ac = new Administrar_Componente();
        ArrayList<Componente> listaControlesFrenos = ac.listarFiltro(4);
        Object[] fila = new Object[8];
        int num = listaControlesFrenos.size();
        if (listaControlesFrenos.isEmpty()) {
            //JOptionPane.showMessageDialog(null, "No hay disponibilidad de componentes del tipo Controles y Frenos");
            flagDisp = false;
            btnAgregarControlesFrenos.setEnabled(true);
            lblControlesYFrenos.setText("No existen componentes tipo controles/frenos disponibles ");
        } else {
            for (int i = 0; i < num; i++) {
                fila[0] = listaControlesFrenos.get(i).getId();
                fila[1] = listaControlesFrenos.get(i).getDescripcion();
                fila[2] = listaControlesFrenos.get(i).getFabricante();
                fila[3] = listaControlesFrenos.get(i).getHoras_vuelo();
                fila[4] = listaControlesFrenos.get(i).getDias_vuelo();
                modelo.addRow(fila);
            }
            tablaControlesFrenos.updateUI();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarAlas;
    private javax.swing.JButton btnAgregarControlesFrenos;
    private javax.swing.JButton btnAgregarEmpenaje;
    private javax.swing.JButton btnAgregarFuselaje;
    private javax.swing.JButton btnAvanzar;
    private javax.swing.JButton btnMenu;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblAlas;
    private javax.swing.JLabel lblControlesYFrenos;
    private javax.swing.JLabel lblEmpenaje;
    private javax.swing.JLabel lblFuselaje;
    private javax.swing.JTable tablaAlas;
    private javax.swing.JTable tablaControlesFrenos;
    private javax.swing.JTable tablaEmpenaje;
    private javax.swing.JTable tablaFuselaje;
    // End of variables declaration//GEN-END:variables
}
